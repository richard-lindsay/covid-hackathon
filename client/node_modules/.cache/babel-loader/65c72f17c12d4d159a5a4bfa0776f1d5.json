{"ast":null,"code":"import _objectSpread from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/newmanra/Documents/ownDev/covid-hackathon/client/src/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport Canvas from './Canvas/Canvas';\nimport Login from './Login/Login';\nimport Header from './Header/Header';\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from 'reactstrap';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport './App.css';\nvar client = new W3CWebSocket('ws://127.0.0.1:8080');\nvar contentDefaultMessage = \"Start writing your document here\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.logInUser = function (username) {\n      _this.setState({\n        username: username\n      });\n\n      if (username.trim()) {\n        var data = {\n          username: username\n        };\n\n        _this.setState(_objectSpread({}, data), client.send(JSON.stringify(_objectSpread({}, data, {\n          type: 'userevent'\n        }))));\n      }\n    };\n\n    _this.onEditorStateChange = function (text) {\n      client.send(JSON.stringify({\n        type: 'contentchange',\n        username: _this.state.username,\n        content: text\n      }));\n    };\n\n    _this.state = {\n      currentUsers: [],\n      userActivity: [],\n      username: null,\n      text: '',\n      players: []\n    };\n    _this.logInUser = _this.logInUser.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      client.onopen = function () {\n        console.log(\"WebSocket Client Connected\");\n      };\n\n      client.onmessage = function (message) {\n        var dataFromServer = JSON.parse(message.data);\n        var stateToChange = {};\n\n        if (dataFromServer.type === \"userevent\") {\n          stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n        } else if (dataFromServer.type === \"contentchange\") {\n          stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage;\n        }\n\n        stateToChange.userActivity = dataFromServer.data.userActivity;\n\n        _this2.setState(_objectSpread({}, stateToChange));\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var username = this.state.username;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        userName: username,\n        role: role,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }\n      }, username ? /*#__PURE__*/React.createElement(Canvas, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(Login, {\n        logInUser: this.logInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 31\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/newmanra/Documents/ownDev/covid-hackathon/client/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Canvas","Login","Header","Navbar","NavbarBrand","UncontrolledTooltip","Editor","client","contentDefaultMessage","App","props","logInUser","username","setState","trim","data","send","JSON","stringify","type","onEditorStateChange","text","state","content","currentUsers","userActivity","players","bind","onopen","console","log","onmessage","message","dataFromServer","parse","stateToChange","Object","values","users","editorContent","role"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { w3cwebsocket as W3CWebSocket} from 'websocket'\n\nimport Canvas from './Canvas/Canvas'\nimport Login from './Login/Login'\nimport Header from './Header/Header'\nimport { Navbar, NavbarBrand, UncontrolledTooltip } from 'reactstrap'\n\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport './App.css';\n\nconst client  = new W3CWebSocket('ws://127.0.0.1:8080')\nconst contentDefaultMessage = \"Start writing your document here\"\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currentUsers: [],\n            userActivity: [],\n            username: null,\n            text: '',\n\t\t\t\t\t\tplayers: [],\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.logInUser = this.logInUser.bind(this)\n\n\t\t}\n\t\t\n\n    logInUser = (username) => {\n\t\t\t\tthis.setState({username})\n\t\t\t\t\n        if (username.trim()) {\n            const data = { username }\n\n            this.setState(\n                {...data},\n                client.send(JSON.stringify({...data, type: 'userevent'}))\n            )\n        }\n    }\n\n    onEditorStateChange = (text) => {\n        client.send(JSON.stringify({\n            type: 'contentchange',\n            username: this.state.username,\n            content: text\n        }))\n    }\n\n    componentWillMount() {\n        client.onopen = () => {\n            console.log(\"WebSocket Client Connected\")\n        }\n\n        client.onmessage = (message) => {\n            const dataFromServer = JSON.parse(message.data)\n            const stateToChange = {}\n\n            if (dataFromServer.type === \"userevent\"){\n                stateToChange.currentUsers = Object.values(dataFromServer.data.users)\n            } else if(dataFromServer.type === \"contentchange\") {\n                stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage\n            }\n\n            stateToChange.userActivity = dataFromServer.data.userActivity\n            this.setState({ ...stateToChange })\n        }\n    }\n\n\t\trender() {\n\t\t\tconst {\n\t\t\t\tusername\n\t\t\t} = this.state;\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Header userName={username} role={role}/>\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t{username ? <Canvas/> : <Login logInUser={this.logInUser} />}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}